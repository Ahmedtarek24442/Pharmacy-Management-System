/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pharmacy.mangement.system;

import connection.connection_manager;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.awt.*;
import java.util.List;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.util.HashSet;
import java.util.Set;
import java.util.Vector;


/**
 *
 * @author ABO TAREK
 */
public class AdminDashboard extends javax.swing.JFrame {

    /**
     * Creates new form AdminDashboard
     */
    //user info
    String Username_ = "";
    String Name_ = "";
    String Phone_ = "";
    String Email_ = "";
    String Password_ = "";
    String Sallary_ = "";
    String role_ = " ";
    String id_ = "";
    //medicine info
    String[] medicines;
    String medicine_id_ = "";
    String medicineName_ = "";
    String medicineSellingPrice_ = "";
    String medicineAbout_ = "";
    String medicineAmount_ = "";
    //Sell medicine panel
    String[] columnNames = {"Medicine ID", "Name", "Price Per Unit", "Units", "Total"};
    DefaultTableModel modelTable2 = new DefaultTableModel(columnNames, 0);
    double Total = 0;
    //sells invoices
    String[] invoices_id_;
    String[] invoices_Date_;
    String[] invoices_time_;
    public AdminDashboard() {
        initComponents();
        Home.setVisible(true);
        profile.setVisible(false);
    }
    public AdminDashboard(String id,String User_name,String Name, String Phone,String Email, String Password, String Sallary, String Role) { 
        initComponents();
        Color color = new Color(45,255,255);
        Color color2 = new Color(255,255,255);
        HomeBtn.setForeground(color);
        Profilebtn.setForeground(color2);
        MedecineStoreBtn.setForeground(color2);
        AddMedicineBtn.setForeground(color2);
        SellsInvoicesBtn.setForeground(color2);
        BuyMedicineBtn.setForeground(color2);
        PurchaseInvoicesBtn.setForeground(color2);
        AddUser.setForeground(color2);
        ViewUsersBtn.setForeground(color2);
        Home.setVisible(true);
        profile.setVisible(false);
        medicine_store.setVisible(false);
        AddMedicine.setVisible(false);
        SellsInvoices.setVisible(false);
        Searchpanel.setVisible(false);
        Searshbar.setVisible(false);
        purchaseInvoices.setVisible(false);
        buyMedicine.setVisible(false);
        ViewUsers.setVisible(false);
         Addusers.setVisible(false);
        Username_ = User_name;
        Name_ = Name;
        Phone_ = Phone;
        Email_ = Email;
        Password_ = Password;
        Sallary_ = Sallary;
        role_ = Role;
        id_ = id;
        name.setText(Name);
        phone.setText(Phone);
        email.setText(Email);
        username.setText(User_name);
        password.setText(Password);
        sallary.setText(Sallary);
        Welcome_user.setText(Name_);
        
        connection_manager connect = new connection_manager();
        //searching for medicines
        DefaultListModel <String> listModel = new DefaultListModel<>();
        medicines = connect.getColumn("medicine", "name");
        for (int i = 0; i < medicines.length;i++) {
            listModel.addElement(medicines[i]);
        }
        jList1.setModel(listModel);
        //set Sells List Model
        setSellsListModel();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        sidebar = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        ExitBtn = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        HomeBtn = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        Profilebtn = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        MedecineStoreBtn = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        AddMedicineBtn = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        SellsInvoicesBtn = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        LogoutBtn = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        ViewUsersBtn = new javax.swing.JLabel();
        jPanel12 = new javax.swing.JPanel();
        BuyMedicineBtn = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        PurchaseInvoicesBtn = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        AddUser = new javax.swing.JLabel();
        Home = new javax.swing.JPanel();
        Welcome = new javax.swing.JPanel();
        Welcome_user = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        profile = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        phone = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        password = new javax.swing.JPasswordField();
        sallary = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        updatebtn = new javax.swing.JButton();
        savebtn = new javax.swing.JButton();
        username = new javax.swing.JTextField();
        medicine_store = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        Searchpanel = new javax.swing.JPanel();
        Searshbar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        MedicineProperies = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        medicineName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        medicine_id = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        medicineSellPrice = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        MedicineAmount = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        MedicineAbout = new javax.swing.JTextArea();
        Update_medicine = new javax.swing.JButton();
        save_medicine = new javax.swing.JButton();
        SellsInvoices = new javax.swing.JPanel();
        Searchpanel3 = new javax.swing.JPanel();
        SearshbarInvoices = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList<>();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        Sells_id = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        InvoiceDate = new javax.swing.JTextField();
        InvoiceTime = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        TotalPriceOfInvoice = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        PharmacistNameSellsInvoices = new javax.swing.JLabel();
        AddMedicine = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        MedicineIdAdd = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        MedicineNameAdd = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        MedicineAmountAdd = new javax.swing.JTextField();
        SellPriceAdd = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        BuyPriceAdd = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        AboutMedicineAdd = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        ResetBtn = new javax.swing.JButton();
        addMedicineBtn = new javax.swing.JButton();
        buyMedicine = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jList4 = new javax.swing.JList<>();
        Searchpanel4 = new javax.swing.JPanel();
        SearshbarBuy = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        medicine_id_Buy = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        medicineNameBuy = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        MedicinePriceBuy = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        NoOfUnitsBuy = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        totalBuy = new javax.swing.JTextField();
        AddToCartBuy = new javax.swing.JButton();
        jScrollPane9 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        ConfirmBuy = new javax.swing.JButton();
        TotalPuarchaceBill = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        purchaseInvoices = new javax.swing.JPanel();
        Searchpanel5 = new javax.swing.JPanel();
        SearshbarInvoices2 = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList<>();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        Purchase_id = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        InvoiceDate2 = new javax.swing.JTextField();
        InvoiceTime2 = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        TotalPriceOfInvoice2 = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        AdminNamePurchaseInvoices = new javax.swing.JLabel();
        ViewUsers = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList<>();
        MedicineProperies1 = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        nameOfUser = new javax.swing.JTextField();
        user_id = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        user_nameOfUsers = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        UpdateUser = new javax.swing.JButton();
        save_user = new javax.swing.JButton();
        userPassword = new javax.swing.JPasswordField();
        userEmail = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        UserPhone = new javax.swing.JTextField();
        jLabel54 = new javax.swing.JLabel();
        UserSallary = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        role_user_lable = new javax.swing.JComboBox<>();
        role_user = new javax.swing.JComboBox<>();
        Addusers = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        AddUserId = new javax.swing.JTextField();
        AddUserUsername = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        AddUserName = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        AddUserSallary = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        AddUserEmail = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        AddUserPhone = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        AddUserRole = new javax.swing.JComboBox<>();
        AddUserPassword = new javax.swing.JPasswordField();
        AddUserResetBtn = new javax.swing.JButton();
        AddUserSaveBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        sidebar.setBackground(new java.awt.Color(53, 92, 125));
        sidebar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(53, 92, 125));
        jPanel2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ExitBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        ExitBtn.setForeground(new java.awt.Color(255, 255, 255));
        ExitBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Exit.png"))); // NOI18N
        ExitBtn.setText(" Exit");
        ExitBtn.setToolTipText("");
        ExitBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ExitBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExitBtnMouseClicked(evt);
            }
        });
        jPanel2.add(ExitBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(45, 0, 120, 40));

        sidebar.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 550, 350, 40));

        jPanel3.setBackground(new java.awt.Color(53, 92, 125));
        jPanel3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        HomeBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        HomeBtn.setForeground(new java.awt.Color(255, 255, 255));
        HomeBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/home (1).png"))); // NOI18N
        HomeBtn.setText(" Home");
        HomeBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        HomeBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                HomeBtnMouseClicked(evt);
            }
        });
        jPanel3.add(HomeBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 0, 130, 40));

        sidebar.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 350, 40));

        jPanel4.setBackground(new java.awt.Color(53, 92, 125));
        jPanel4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Profilebtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        Profilebtn.setForeground(new java.awt.Color(255, 255, 255));
        Profilebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user.png"))); // NOI18N
        Profilebtn.setText(" Profile");
        Profilebtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Profilebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProfilebtnMouseClicked(evt);
            }
        });
        jPanel4.add(Profilebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 0, 130, 40));

        sidebar.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 100, 350, 40));

        jPanel5.setBackground(new java.awt.Color(53, 92, 125));
        jPanel5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        MedecineStoreBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        MedecineStoreBtn.setForeground(new java.awt.Color(255, 255, 255));
        MedecineStoreBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/medicinestore.png"))); // NOI18N
        MedecineStoreBtn.setText(" Medicine Store");
        MedecineStoreBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MedecineStoreBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedecineStoreBtnMouseClicked(evt);
            }
        });
        jPanel5.add(MedecineStoreBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 0, 220, 40));

        sidebar.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 350, 40));

        jPanel6.setBackground(new java.awt.Color(53, 92, 125));
        jPanel6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AddMedicineBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        AddMedicineBtn.setForeground(new java.awt.Color(255, 255, 255));
        AddMedicineBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        AddMedicineBtn.setText(" Add Medicine");
        AddMedicineBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddMedicineBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddMedicineBtnMouseClicked(evt);
            }
        });
        jPanel6.add(AddMedicineBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 0, 210, 40));

        sidebar.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 350, 40));

        jPanel9.setBackground(new java.awt.Color(53, 92, 125));
        jPanel9.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SellsInvoicesBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        SellsInvoicesBtn.setForeground(new java.awt.Color(255, 255, 255));
        SellsInvoicesBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/invoice.png"))); // NOI18N
        SellsInvoicesBtn.setText(" Sells Invoices");
        SellsInvoicesBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SellsInvoicesBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SellsInvoicesBtnMouseClicked(evt);
            }
        });
        jPanel9.add(SellsInvoicesBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 0, 250, 40));

        sidebar.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 350, 40));

        jPanel10.setBackground(new java.awt.Color(53, 92, 125));
        jPanel10.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        LogoutBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        LogoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        LogoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/check-out.png"))); // NOI18N
        LogoutBtn.setText(" Logout");
        LogoutBtn.setToolTipText("");
        LogoutBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        LogoutBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                LogoutBtnMouseClicked(evt);
            }
        });
        jPanel10.add(LogoutBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 0, 140, 40));

        sidebar.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 500, 350, 40));

        jPanel11.setBackground(new java.awt.Color(53, 92, 125));
        jPanel11.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        ViewUsersBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        ViewUsersBtn.setForeground(new java.awt.Color(255, 255, 255));
        ViewUsersBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/group.png"))); // NOI18N
        ViewUsersBtn.setText(" View users");
        ViewUsersBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ViewUsersBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ViewUsersBtnMouseClicked(evt);
            }
        });
        jPanel11.add(ViewUsersBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 0, 180, 40));

        sidebar.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 450, 350, 40));

        jPanel12.setBackground(new java.awt.Color(53, 92, 125));
        jPanel12.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BuyMedicineBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        BuyMedicineBtn.setForeground(new java.awt.Color(255, 255, 255));
        BuyMedicineBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/treatment.png"))); // NOI18N
        BuyMedicineBtn.setText(" Buy medicine");
        BuyMedicineBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BuyMedicineBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BuyMedicineBtnMouseClicked(evt);
            }
        });
        jPanel12.add(BuyMedicineBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 0, 200, 40));

        sidebar.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 350, 40));

        jPanel13.setBackground(new java.awt.Color(53, 92, 125));
        jPanel13.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        PurchaseInvoicesBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        PurchaseInvoicesBtn.setForeground(new java.awt.Color(255, 255, 255));
        PurchaseInvoicesBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/invoice.png"))); // NOI18N
        PurchaseInvoicesBtn.setText(" Purchase Invoices");
        PurchaseInvoicesBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        PurchaseInvoicesBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PurchaseInvoicesBtnMouseClicked(evt);
            }
        });
        jPanel13.add(PurchaseInvoicesBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 0, 250, 40));

        sidebar.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 350, 350, 40));

        jPanel14.setBackground(new java.awt.Color(53, 92, 125));
        jPanel14.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        AddUser.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        AddUser.setForeground(new java.awt.Color(255, 255, 255));
        AddUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-user.png"))); // NOI18N
        AddUser.setText(" Add user");
        AddUser.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        AddUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AddUserMouseClicked(evt);
            }
        });
        jPanel14.add(AddUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(41, 0, 180, 40));

        sidebar.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 400, 350, 40));

        getContentPane().add(sidebar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 650));

        Home.setBackground(new java.awt.Color(235, 255, 255));
        Home.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Welcome.setBackground(new java.awt.Color(235, 255, 255));
        Welcome.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Welcome_user.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        Welcome_user.setForeground(new java.awt.Color(102, 102, 102));
        Welcome_user.setText("Name");
        Welcome.add(Welcome_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 690, 57));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel11.setText("Welcome ");
        Welcome.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, 57));

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("We're here to empower you to efficiently manage your inventory, ");
        Welcome.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 150, 430, 20));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Success in your pharmacy begins with mastering the little details.");
        Welcome.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 130, 420, 20));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Together, we can achieve precision and excellence every step of the way.");
        Welcome.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 190, 470, -1));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("track sales, and deliver exceptional service to your customers.");
        Welcome.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 170, 450, -1));

        Home.add(Welcome, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 240));

        getContentPane().add(Home, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 930, 650));

        profile.setBackground(new java.awt.Color(245, 255, 255));
        profile.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        profile.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/profilepage_2.png"))); // NOI18N
        profile.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 180, 130, 130));

        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(102, 102, 102));
        jLabel19.setText("Name");
        profile.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 40, 110, 30));

        name.setBackground(new java.awt.Color(235, 255, 255));
        name.setForeground(new java.awt.Color(102, 102, 102));
        name.setText("Name");
        name.setToolTipText("");
        name.setActionCommand("<Not Set>");
        name.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        name.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        name.setFocusable(false);
        name.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameMouseClicked(evt);
            }
        });
        profile.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 90, 340, 25));

        jLabel20.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(102, 102, 102));
        jLabel20.setText("Email");
        profile.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 145, 110, 30));

        email.setBackground(new java.awt.Color(235, 255, 255));
        email.setForeground(new java.awt.Color(102, 102, 102));
        email.setText("Email");
        email.setToolTipText("");
        email.setActionCommand("<Not Set>");
        email.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        email.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        email.setFocusable(false);
        email.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                emailMouseClicked(evt);
            }
        });
        profile.add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 195, 340, 25));

        phone.setBackground(new java.awt.Color(235, 255, 255));
        phone.setForeground(new java.awt.Color(102, 102, 102));
        phone.setText("Phone");
        phone.setToolTipText("");
        phone.setActionCommand("<Not Set>");
        phone.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        phone.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        phone.setFocusable(false);
        phone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                phoneMouseClicked(evt);
            }
        });
        profile.add(phone, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 300, 340, 25));

        jLabel21.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(102, 102, 102));
        jLabel21.setText("Phone");
        profile.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 250, 110, 30));

        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(102, 102, 102));
        jLabel22.setText("Password");
        profile.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 355, 110, 30));

        password.setBackground(new java.awt.Color(235, 255, 255));
        password.setForeground(new java.awt.Color(102, 102, 102));
        password.setText("Password");
        password.setToolTipText("");
        password.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        password.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        password.setFocusable(false);
        password.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passwordMouseClicked(evt);
            }
        });
        profile.add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 405, 340, 25));

        sallary.setBackground(new java.awt.Color(235, 255, 255));
        sallary.setForeground(new java.awt.Color(102, 102, 102));
        sallary.setText("Sallary");
        sallary.setToolTipText("");
        sallary.setActionCommand("<Not Set>");
        sallary.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        sallary.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        sallary.setFocusable(false);
        sallary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sallaryMouseClicked(evt);
            }
        });
        profile.add(sallary, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 510, 340, 25));

        jLabel23.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(102, 102, 102));
        jLabel23.setText("Sallary");
        profile.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 460, 110, 30));

        updatebtn.setBackground(new java.awt.Color(204, 255, 204));
        updatebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rotation.png"))); // NOI18N
        updatebtn.setText("Update");
        updatebtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        updatebtn.setFocusPainted(false);
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });
        profile.add(updatebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 600, 100, 30));

        savebtn.setBackground(new java.awt.Color(204, 255, 204));
        savebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/diskette.png"))); // NOI18N
        savebtn.setText(" Save");
        savebtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });
        profile.add(savebtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 600, 100, 30));

        username.setBackground(new java.awt.Color(245, 255, 255));
        username.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        username.setForeground(new java.awt.Color(102, 102, 102));
        username.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        username.setText("Username");
        username.setBorder(null);
        username.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        username.setFocusable(false);
        username.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usernameMouseClicked(evt);
            }
        });
        profile.add(username, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 220, 30));

        getContentPane().add(profile, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 930, 650));

        medicine_store.setBackground(new java.awt.Color(245, 255, 255));
        medicine_store.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Medicine Store");
        medicine_store.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 8, 260, -1));
        medicine_store.add(jDesktopPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 100, -1, -1));

        jList1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jList1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jList1.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        medicine_store.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 280, 500));

        Searchpanel.setBackground(new java.awt.Color(255, 255, 255));
        Searchpanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Searchpanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Searshbar.setBorder(null);
        Searshbar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearshbarKeyReleased(evt);
            }
        });
        Searchpanel.add(Searshbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 250, 23));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        Searchpanel.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 3, -1, -1));

        medicine_store.add(Searchpanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 280, 27));

        MedicineProperies.setBackground(new java.awt.Color(255, 255, 255));
        MedicineProperies.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        MedicineProperies.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Medicine Information");
        MedicineProperies.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 460, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Id");
        MedicineProperies.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 40, 20));

        medicineName.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        medicineName.setFocusable(false);
        medicineName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicineNameMouseClicked(evt);
            }
        });
        MedicineProperies.add(medicineName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 350, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 102, 102));
        jLabel6.setText("About");
        MedicineProperies.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 50, 20));

        medicine_id.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        medicine_id.setFocusable(false);
        medicine_id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicine_idMouseClicked(evt);
            }
        });
        MedicineProperies.add(medicine_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 110, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setText("Name");
        MedicineProperies.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 40, 20));

        medicineSellPrice.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        medicineSellPrice.setFocusable(false);
        medicineSellPrice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicineSellPriceMouseClicked(evt);
            }
        });
        MedicineProperies.add(medicineSellPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 350, -1));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Price");
        MedicineProperies.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 40, 20));

        MedicineAmount.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MedicineAmount.setFocusable(false);
        MedicineAmount.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedicineAmountMouseClicked(evt);
            }
        });
        MedicineProperies.add(MedicineAmount, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 350, -1));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(102, 102, 102));
        jLabel9.setText("Amount");
        MedicineProperies.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 60, 20));

        MedicineAbout.setColumns(20);
        MedicineAbout.setRows(5);
        MedicineAbout.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MedicineAbout.setFocusable(false);
        MedicineAbout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MedicineAboutMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(MedicineAbout);

        MedicineProperies.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 350, 110));

        Update_medicine.setBackground(new java.awt.Color(204, 255, 204));
        Update_medicine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rotation.png"))); // NOI18N
        Update_medicine.setText("Update");
        Update_medicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Update_medicineActionPerformed(evt);
            }
        });
        MedicineProperies.add(Update_medicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 485, 100, 30));

        save_medicine.setBackground(new java.awt.Color(204, 255, 204));
        save_medicine.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/diskette.png"))); // NOI18N
        save_medicine.setText("Save");
        save_medicine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_medicineActionPerformed(evt);
            }
        });
        MedicineProperies.add(save_medicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 485, 100, 30));

        medicine_store.add(MedicineProperies, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 80, -1, 530));

        getContentPane().add(medicine_store, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 930, 650));

        SellsInvoices.setBackground(new java.awt.Color(245, 255, 255));
        SellsInvoices.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Searchpanel3.setBackground(new java.awt.Color(255, 255, 255));
        Searchpanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Searchpanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SearshbarInvoices.setBorder(null);
        SearshbarInvoices.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearshbarInvoicesKeyReleased(evt);
            }
        });
        Searchpanel3.add(SearshbarInvoices, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 250, 25));

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        Searchpanel3.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 5, -1, -1));

        SellsInvoices.add(Searchpanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 280, 30));

        jScrollPane5.setBackground(new java.awt.Color(255, 255, 255));

        jList3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jList3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jList3.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList3ValueChanged(evt);
            }
        });
        jScrollPane5.setViewportView(jList3);

        SellsInvoices.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 280, 540));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID", "Medicine Name", "Price per unit", "Units", "Total"
            }
        ));
        jTable1.setFocusable(false);
        jScrollPane7.setViewportView(jTable1);

        SellsInvoices.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, 490, 280));

        jLabel35.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(102, 102, 102));
        jLabel35.setText("Invoice details");
        SellsInvoices.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, -1, -1));

        jLabel36.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel36.setText("ID");
        SellsInvoices.add(jLabel36, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 20, -1));

        Sells_id.setFocusable(false);
        SellsInvoices.add(Sells_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 200, -1));

        jLabel37.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel37.setText("Date");
        SellsInvoices.add(jLabel37, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 120, -1, -1));

        InvoiceDate.setFocusable(false);
        SellsInvoices.add(InvoiceDate, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 150, 200, -1));

        InvoiceTime.setFocusable(false);
        SellsInvoices.add(InvoiceTime, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 220, 200, -1));

        jLabel38.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel38.setText("Time");
        SellsInvoices.add(jLabel38, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, 40, -1));

        TotalPriceOfInvoice.setFocusable(false);
        SellsInvoices.add(TotalPriceOfInvoice, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 220, 200, -1));

        jLabel39.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel39.setText("Total");
        SellsInvoices.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 190, 40, -1));

        PharmacistNameSellsInvoices.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        PharmacistNameSellsInvoices.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        SellsInvoices.add(PharmacistNameSellsInvoices, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 580, 450, 40));

        getContentPane().add(SellsInvoices, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 930, 650));

        AddMedicine.setBackground(new java.awt.Color(245, 255, 255));
        AddMedicine.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(102, 102, 102));
        jLabel17.setText("Amount");
        AddMedicine.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 290, 100, 20));
        AddMedicine.add(MedicineIdAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 120, 120, 25));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(102, 102, 102));
        jLabel18.setText("Medicine Id");
        AddMedicine.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 80, 140, 20));
        AddMedicine.add(MedicineNameAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 225, 350, -1));

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(102, 102, 102));
        jLabel24.setText("Name");
        AddMedicine.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 185, 80, 20));
        AddMedicine.add(MedicineAmountAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 330, 350, -1));
        AddMedicine.add(SellPriceAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 440, 350, -1));

        jLabel25.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(102, 102, 102));
        jLabel25.setText("Price to sell");
        AddMedicine.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 400, 120, 20));
        AddMedicine.add(BuyPriceAdd, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 540, 350, -1));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(102, 102, 102));
        jLabel26.setText("About");
        AddMedicine.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 80, 20));

        jLabel27.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(102, 102, 102));
        jLabel27.setText("Price to buy");
        AddMedicine.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 500, 120, 20));

        AboutMedicineAdd.setColumns(20);
        AboutMedicineAdd.setRows(5);
        jScrollPane3.setViewportView(AboutMedicineAdd);

        AddMedicine.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, 350, 150));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 102, 102));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Add Medicine");
        AddMedicine.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 930, 50));

        ResetBtn.setBackground(new java.awt.Color(200, 255, 255));
        ResetBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        ResetBtn.setForeground(new java.awt.Color(102, 102, 102));
        ResetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/loading.png"))); // NOI18N
        ResetBtn.setText(" Reset");
        ResetBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetBtnActionPerformed(evt);
            }
        });
        AddMedicine.add(ResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 340, 140, 50));

        addMedicineBtn.setBackground(new java.awt.Color(200, 255, 255));
        addMedicineBtn.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        addMedicineBtn.setForeground(new java.awt.Color(102, 102, 102));
        addMedicineBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add.png"))); // NOI18N
        addMedicineBtn.setText(" Add");
        addMedicineBtn.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addMedicineBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMedicineBtnActionPerformed(evt);
            }
        });
        AddMedicine.add(addMedicineBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 340, 130, 50));

        getContentPane().add(AddMedicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 930, 650));

        buyMedicine.setBackground(new java.awt.Color(245, 255, 255));
        buyMedicine.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane8.setBackground(new java.awt.Color(255, 255, 255));

        jList4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jList4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jList4.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList4ValueChanged(evt);
            }
        });
        jScrollPane8.setViewportView(jList4);

        buyMedicine.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 280, 540));

        Searchpanel4.setBackground(new java.awt.Color(255, 255, 255));
        Searchpanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Searchpanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SearshbarBuy.setBorder(null);
        SearshbarBuy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearshbarBuyKeyReleased(evt);
            }
        });
        Searchpanel4.add(SearshbarBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 250, 25));

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        Searchpanel4.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 5, -1, -1));

        buyMedicine.add(Searchpanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 280, 30));

        jLabel41.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel41.setText("Medicine ID");
        buyMedicine.add(jLabel41, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, 70, 20));

        medicine_id_Buy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        medicine_id_Buy.setFocusable(false);
        buyMedicine.add(medicine_id_Buy, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 210, -1));

        jLabel42.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel42.setText("Name");
        buyMedicine.add(jLabel42, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 80, 20));

        medicineNameBuy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        medicineNameBuy.setFocusable(false);
        buyMedicine.add(medicineNameBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 160, 210, -1));

        jLabel43.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel43.setText("Price per Unit");
        buyMedicine.add(jLabel43, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 60, -1, -1));

        MedicinePriceBuy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        MedicinePriceBuy.setFocusable(false);
        buyMedicine.add(MedicinePriceBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 90, 210, -1));

        jLabel44.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel44.setText("No. of Units");
        buyMedicine.add(jLabel44, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 130, 70, -1));

        NoOfUnitsBuy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                NoOfUnitsBuyKeyReleased(evt);
            }
        });
        buyMedicine.add(NoOfUnitsBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 160, 210, -1));

        jLabel45.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel45.setText("Total");
        buyMedicine.add(jLabel45, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 206, 30, 20));

        totalBuy.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        totalBuy.setFocusable(false);
        buyMedicine.add(totalBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 232, 210, -1));

        AddToCartBuy.setBackground(new java.awt.Color(200, 255, 255));
        AddToCartBuy.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        AddToCartBuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add-to-cart.png"))); // NOI18N
        AddToCartBuy.setText("Add To Cart");
        AddToCartBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToCartBuyActionPerformed(evt);
            }
        });
        buyMedicine.add(AddToCartBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 220, 140, 40));

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID", "Name", "Price Per Unit", "Units", "Total"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(jTable3);

        buyMedicine.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 280, 460, 280));

        ConfirmBuy.setBackground(new java.awt.Color(200, 255, 255));
        ConfirmBuy.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        ConfirmBuy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/invoice (1).png"))); // NOI18N
        ConfirmBuy.setText(" Buy");
        ConfirmBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmBuyActionPerformed(evt);
            }
        });
        buyMedicine.add(ConfirmBuy, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 583, -1, -1));

        TotalPuarchaceBill.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        TotalPuarchaceBill.setText("00");
        buyMedicine.add(TotalPuarchaceBill, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 590, 180, 30));

        jLabel46.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel46.setText("Total:");
        buyMedicine.add(jLabel46, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 588, 70, -1));

        getContentPane().add(buyMedicine, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 930, 650));

        purchaseInvoices.setBackground(new java.awt.Color(245, 255, 255));
        purchaseInvoices.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Searchpanel5.setBackground(new java.awt.Color(255, 255, 255));
        Searchpanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Searchpanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        SearshbarInvoices2.setBorder(null);
        SearshbarInvoices2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                SearshbarInvoices2KeyReleased(evt);
            }
        });
        Searchpanel5.add(SearshbarInvoices2, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 2, 250, 25));

        jLabel47.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/search.png"))); // NOI18N
        Searchpanel5.add(jLabel47, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 5, -1, -1));

        purchaseInvoices.add(Searchpanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 40, 280, 30));

        jScrollPane6.setBackground(new java.awt.Color(255, 255, 255));

        jList5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jList5.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jList5.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList5ValueChanged(evt);
            }
        });
        jScrollPane6.setViewportView(jList5);

        purchaseInvoices.add(jScrollPane6, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 280, 540));

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID", "Medicine Name", "Price per unit", "Units", "Total"
            }
        ));
        jTable2.setFocusable(false);
        jScrollPane10.setViewportView(jTable2);

        purchaseInvoices.add(jScrollPane10, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 270, 490, 280));

        jLabel48.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(102, 102, 102));
        jLabel48.setText("Invoice details");
        purchaseInvoices.add(jLabel48, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, -1, -1));

        jLabel49.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel49.setText("ID");
        purchaseInvoices.add(jLabel49, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 120, 20, -1));

        Purchase_id.setFocusable(false);
        purchaseInvoices.add(Purchase_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 200, -1));

        jLabel50.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel50.setText("Date");
        purchaseInvoices.add(jLabel50, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 120, -1, -1));

        InvoiceDate2.setFocusable(false);
        purchaseInvoices.add(InvoiceDate2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 150, 200, -1));

        InvoiceTime2.setFocusable(false);
        purchaseInvoices.add(InvoiceTime2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 220, 200, -1));

        jLabel51.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel51.setText("Time");
        purchaseInvoices.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, 40, -1));

        TotalPriceOfInvoice2.setFocusable(false);
        purchaseInvoices.add(TotalPriceOfInvoice2, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 220, 200, -1));

        jLabel52.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel52.setText("Total");
        purchaseInvoices.add(jLabel52, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 190, 40, -1));

        AdminNamePurchaseInvoices.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        AdminNamePurchaseInvoices.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        purchaseInvoices.add(AdminNamePurchaseInvoices, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 580, 450, 40));

        getContentPane().add(purchaseInvoices, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 930, 650));

        ViewUsers.setBackground(new java.awt.Color(245, 255, 255));
        ViewUsers.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jList6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        jList6.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jList6.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                jList6ValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(jList6);

        ViewUsers.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, 280, 530));

        MedicineProperies1.setBackground(new java.awt.Color(255, 255, 255));
        MedicineProperies1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        MedicineProperies1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel28.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("User Information");
        MedicineProperies1.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 460, 30));

        jLabel29.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(102, 102, 102));
        jLabel29.setText("Id");
        MedicineProperies1.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 50, 40, 20));

        nameOfUser.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        nameOfUser.setFocusable(false);
        nameOfUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nameOfUserMouseClicked(evt);
            }
        });
        MedicineProperies1.add(nameOfUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 350, 25));

        user_id.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        user_id.setFocusable(false);
        user_id.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_idMouseClicked(evt);
            }
        });
        MedicineProperies1.add(user_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, 130, 25));

        jLabel31.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(102, 102, 102));
        jLabel31.setText("Name");
        MedicineProperies1.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 40, 20));

        user_nameOfUsers.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        user_nameOfUsers.setFocusable(false);
        user_nameOfUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_nameOfUsersMouseClicked(evt);
            }
        });
        MedicineProperies1.add(user_nameOfUsers, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, 350, 25));

        jLabel32.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(102, 102, 102));
        jLabel32.setText("Username");
        MedicineProperies1.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 80, 20));

        jLabel33.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(102, 102, 102));
        jLabel33.setText("Password");
        MedicineProperies1.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 80, 20));

        UpdateUser.setBackground(new java.awt.Color(204, 255, 204));
        UpdateUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rotation.png"))); // NOI18N
        UpdateUser.setText("Update");
        UpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateUserActionPerformed(evt);
            }
        });
        MedicineProperies1.add(UpdateUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 570, 100, 30));

        save_user.setBackground(new java.awt.Color(204, 255, 204));
        save_user.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/diskette.png"))); // NOI18N
        save_user.setText("Save");
        save_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_userActionPerformed(evt);
            }
        });
        MedicineProperies1.add(save_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 570, 100, 30));

        userPassword.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        userPassword.setFocusable(false);
        userPassword.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userPasswordMouseClicked(evt);
            }
        });
        MedicineProperies1.add(userPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 350, 25));

        userEmail.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        userEmail.setFocusable(false);
        userEmail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userEmailMouseClicked(evt);
            }
        });
        MedicineProperies1.add(userEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 350, 25));

        jLabel53.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel53.setForeground(new java.awt.Color(102, 102, 102));
        jLabel53.setText("Email");
        MedicineProperies1.add(jLabel53, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 330, 60, 20));

        UserPhone.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        UserPhone.setFocusable(false);
        UserPhone.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserPhoneMouseClicked(evt);
            }
        });
        MedicineProperies1.add(UserPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 430, 350, 25));

        jLabel54.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel54.setForeground(new java.awt.Color(102, 102, 102));
        jLabel54.setText("Phone");
        MedicineProperies1.add(jLabel54, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, 60, 20));

        UserSallary.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        UserSallary.setFocusable(false);
        UserSallary.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                UserSallaryMouseClicked(evt);
            }
        });
        MedicineProperies1.add(UserSallary, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 500, 350, 25));

        jLabel55.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel55.setForeground(new java.awt.Color(102, 102, 102));
        jLabel55.setText("Sallary");
        MedicineProperies1.add(jLabel55, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 470, 60, 20));

        jLabel56.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel56.setForeground(new java.awt.Color(102, 102, 102));
        jLabel56.setText("Role");
        MedicineProperies1.add(jLabel56, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 50, 40, 20));

        role_user_lable.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Pharmacist", " " }));
        role_user_lable.setFocusable(false);
        role_user_lable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                role_user_lableMouseClicked(evt);
            }
        });
        MedicineProperies1.add(role_user_lable, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 150, 25));

        ViewUsers.add(MedicineProperies1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 20, 460, 610));

        role_user.setBackground(new java.awt.Color(200, 255, 255));
        role_user.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Admins", "Pharmacists", "" }));
        role_user.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                role_userFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                role_userFocusLost(evt);
            }
        });
        role_user.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                role_userActionPerformed(evt);
            }
        });
        ViewUsers.add(role_user, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 280, -1));

        getContentPane().add(ViewUsers, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 930, 650));

        Addusers.setBackground(new java.awt.Color(245, 255, 255));
        Addusers.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/profilepage_2.png"))); // NOI18N
        Addusers.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, -1, -1));

        jLabel30.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(102, 102, 102));
        jLabel30.setText("Id");
        Addusers.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 70, 20, -1));
        Addusers.add(AddUserId, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 100, 140, 25));
        Addusers.add(AddUserUsername, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 170, 350, 25));

        jLabel57.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel57.setForeground(new java.awt.Color(102, 102, 102));
        jLabel57.setText("Username");
        Addusers.add(jLabel57, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, -1, -1));

        jLabel58.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel58.setForeground(new java.awt.Color(102, 102, 102));
        jLabel58.setText("Password");
        Addusers.add(jLabel58, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 210, -1, 20));
        Addusers.add(AddUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 310, 350, 25));

        jLabel59.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel59.setForeground(new java.awt.Color(102, 102, 102));
        jLabel59.setText("Name");
        Addusers.add(jLabel59, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 280, -1, -1));
        Addusers.add(AddUserSallary, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 380, 350, 25));

        jLabel60.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(102, 102, 102));
        jLabel60.setText("Sallary");
        Addusers.add(jLabel60, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 350, 50, -1));
        Addusers.add(AddUserEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 450, 350, 25));

        jLabel61.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(102, 102, 102));
        jLabel61.setText("Email");
        Addusers.add(jLabel61, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 420, -1, -1));
        Addusers.add(AddUserPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 520, 350, 25));

        jLabel62.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(102, 102, 102));
        jLabel62.setText("Phone");
        Addusers.add(jLabel62, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 490, -1, -1));

        jLabel63.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(102, 102, 102));
        jLabel63.setText("Role");
        Addusers.add(jLabel63, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 70, 50, -1));

        AddUserRole.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "admin", "pharmacist", " " }));
        Addusers.add(AddUserRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 100, 140, 25));
        Addusers.add(AddUserPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 240, 350, 25));

        AddUserResetBtn.setBackground(new java.awt.Color(204, 255, 204));
        AddUserResetBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/rotation.png"))); // NOI18N
        AddUserResetBtn.setText("Reset");
        AddUserResetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddUserResetBtnActionPerformed(evt);
            }
        });
        Addusers.add(AddUserResetBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 590, 100, 30));

        AddUserSaveBtn.setBackground(new java.awt.Color(204, 255, 204));
        AddUserSaveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/diskette.png"))); // NOI18N
        AddUserSaveBtn.setText("Save");
        AddUserSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddUserSaveBtnActionPerformed(evt);
            }
        });
        Addusers.add(AddUserSaveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 590, 100, 30));

        getContentPane().add(Addusers, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 0, 930, 650));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public  DefaultListModel <String> setSellsListModel() {
        connection_manager connect = new connection_manager();
        DefaultListModel<String> listModelInvoices = new DefaultListModel<>();
        invoices_id_ = connect.getColumn("sellsinvoices", "sells_id");
        String[] temp = connect.getColumn("sellsinvoices", "sells_date");

        // Initialize arrays for date and time
        invoices_Date_ = new String[temp.length];
        invoices_time_ = new String[temp.length];

        // Set to hold unique date-time combinations
        Set<String> uniqueInvoices = new HashSet<>();

        // Split date and time, and store unique combinations in the Set
        for (int i = 0; i < temp.length; i++) {
            invoices_Date_[i] = temp[i].split(" ")[0];
            invoices_time_[i] = temp[i].split(" ")[1];

            // Add unique date-time combination to the Set
            uniqueInvoices.add(invoices_Date_[i] + " at " + invoices_time_[i]);
        }

        // Add the unique elements from the Set to the DefaultListModel
        for (String invoice : uniqueInvoices) {
            listModelInvoices.addElement(invoice);
        }

        // Set the model to the JList
        jList3.setModel(listModelInvoices);
        return (listModelInvoices);
    }
    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
        // TODO add your handling code here:
        Cursor cursor = Cursor.getPredefinedCursor(2);
        savebtn.setVisible(true);
        name.setFocusable(true);
        username.setFocusable(true);
        email.setFocusable(true);
        password.setFocusable(true);
        phone.setFocusable(true);
        sallary.setFocusable(true);
        name.setCursor(cursor);
        username.setCursor(cursor);
        password.setCursor(cursor);
        phone.setCursor(cursor);
        email.setCursor(cursor);
        sallary.setCursor(cursor);
        
        
    }//GEN-LAST:event_updatebtnActionPerformed
    private void HomeBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HomeBtnMouseClicked
        // TODO add your handling code here:
        Color color = new Color(45,255,255);
        Color color2 = new Color(255,255,255);
        HomeBtn.setForeground(color);
        Profilebtn.setForeground(color2);
        MedecineStoreBtn.setForeground(color2);
        AddMedicineBtn.setForeground(color2);
        SellsInvoicesBtn.setForeground(color2);
        BuyMedicineBtn.setForeground(color2);
        PurchaseInvoicesBtn.setForeground(color2);
        AddUser.setForeground(color2);
        ViewUsersBtn.setForeground(color2);
        Home.setVisible(true);
        profile.setVisible(false);
        medicine_store.setVisible(false);
        AddMedicine.setVisible(false);
        SellsInvoices.setVisible(false);
        purchaseInvoices.setVisible(false);
        buyMedicine.setVisible(false);
        ViewUsers.setVisible(false);
         Addusers.setVisible(false);
        
    }//GEN-LAST:event_HomeBtnMouseClicked
    private void ProfilebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProfilebtnMouseClicked
        // TODO add your handling code here:
        Color color = new Color(45,255,255);
        Color color2 = new Color(255,255,255);
        HomeBtn.setForeground(color2);
        Profilebtn.setForeground(color);
        MedecineStoreBtn.setForeground(color2);
        AddMedicineBtn.setForeground(color2);
        SellsInvoicesBtn.setForeground(color2);
        BuyMedicineBtn.setForeground(color2);
        PurchaseInvoicesBtn.setForeground(color2);
        AddUser.setForeground(color2);
        ViewUsersBtn.setForeground(color2);
        savebtn.setVisible(false);
        Home.setVisible(false);
        profile.setVisible(true);
        medicine_store.setVisible(false);
        AddMedicine.setVisible(false);
        SellsInvoices.setVisible(false);
        purchaseInvoices.setVisible(false);
        buyMedicine.setVisible(false);
        ViewUsers.setVisible(false);
        Addusers.setVisible(false);
    }//GEN-LAST:event_ProfilebtnMouseClicked
    private void nameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameMouseClicked
        // TODO add your handling code here:
        if (!savebtn.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_nameMouseClicked
    private void sallaryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sallaryMouseClicked
        // TODO add your handling code here:
        if (!savebtn.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_sallaryMouseClicked
    private void passwordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passwordMouseClicked
        // TODO add your handling code here:
        if (!savebtn.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_passwordMouseClicked
    private void phoneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_phoneMouseClicked
        // TODO add your handling code here:
        if (!savebtn.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_phoneMouseClicked
    private void emailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_emailMouseClicked
        // TODO add your handling code here:
        if (!savebtn.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_emailMouseClicked
    private void usernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usernameMouseClicked
        // TODO add your handling code here:
        if (!savebtn.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_usernameMouseClicked
    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
        // TODO add your handling code here:
        connection_manager connect = new connection_manager();
        //check if is empty
        if(username.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "username musn't be empty");
            username.requestFocusInWindow();
        }
        if(password.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "password musn't be empty");
            password.requestFocusInWindow();
        }
        if(phone.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "phone musn't be empty");
            phone.requestFocusInWindow();
        }
        if(email.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "email musn't be empty");
            email.requestFocusInWindow();
        }
        if(name.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "name musn't be empty");
            name.requestFocusInWindow();
        } 
        //check sallary
        if(sallary.getText().trim().isEmpty() || sallary.getText().matches("\\\\d+")) {
            JOptionPane.showMessageDialog(null, "invalid value in sallary field");
            name.requestFocusInWindow();
        }
        
        //check if there is a same user name
        boolean checker = true;
        String[] usernames = connect.getColumn(role_ , "user_name");
        for (String i : usernames) {
            if (i.equals(username.getText().trim()) && !i.equals(Username_)){
                JOptionPane.showMessageDialog(null, "this user name is used please write another one");
                username.requestFocusInWindow();
                checker = false;
                break;
            }
        }
        
        //Phone_
        String[] Phones = connect.getColumn(role_ , "phone");
        for (String i : Phones) {
            if (i.equals(phone.getText().trim()) && !i.equals(Phone_)) {
                JOptionPane.showMessageDialog(null, "this phone is used please write another one");
                phone.requestFocusInWindow();
                checker = false;
                break;
            }
        }
        //Email_
        String[] emails = connect.getColumn(role_ , "email");
        for (String i : emails) {
            if (i.equals(email.getText().trim()) && !i.equals(Email_)) {
                JOptionPane.showMessageDialog(null, "this email is used please write another one");
                email.requestFocusInWindow();
                checker = false;
                break;
            }
        }
        
        if (checker) {
            if (role_.equals("Admin")) {
                connect.updateData(role_, "admin_id", "user_name", id_, username.getText().trim());
                connect.updateData(role_, "admin_id", "name", id_, name.getText().trim());
                connect.updateData(role_, "admin_id", "password", id_, password.getText().trim());
                connect.updateData(role_, "admin_id", "phone", id_, phone.getText().trim());
                connect.updateData(role_, "admin_id", "email", id_, email.getText().trim());
                connect.updateData(role_, "admin_id", "sallary", id_, sallary.getText().trim());
                Username_ = username.getText().trim();
                Name_ = name.getText().trim();
                Phone_ = phone.getText().trim();
                Email_ = email.getText().trim();
                Password_ = password.getText().trim();
                Sallary_ = sallary.getText().trim();
            }
            else {
                connect.updateData(role_, "pharma_id", "user_name", id_, username.getText().trim());
                connect.updateData(role_, "pharma_id", "name", id_, name.getText().trim());
                connect.updateData(role_, "pharma_id", "password", id_, password.getText().trim());
                connect.updateData(role_, "pharma_id", "phone", id_, phone.getText().trim());
                connect.updateData(role_, "pharma_id", "email", id_, email.getText().trim());
                Username_ = username.getText().trim();
                Name_ = name.getText().trim();
                Phone_ = phone.getText().trim();
                Email_ = email.getText().trim();
                Password_ = password.getText().trim();
                
            }
            JOptionPane.showMessageDialog(null, "Saved Successfully");
            savebtn.setVisible(false);
            Cursor cursor = Cursor.getPredefinedCursor(0);
            name.setFocusable(false);
            username.setFocusable(false);
            email.setFocusable(false);
            password.setFocusable(false);
            phone.setFocusable(false);
            sallary.setFocusable(false);
            name.setCursor(cursor);
            username.setCursor(cursor);
            password.setCursor(cursor);
            phone.setCursor(cursor);
            email.setCursor(cursor);   
            sallary.setCursor(cursor);
        }
    }//GEN-LAST:event_savebtnActionPerformed
    private void MedecineStoreBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedecineStoreBtnMouseClicked
        // TODO add your handling code here:
        Color color = new Color(45,255,255);
        Color color2 = new Color(255,255,255);
        HomeBtn.setForeground(color2);
        Profilebtn.setForeground(color2);
        MedecineStoreBtn.setForeground(color);
        AddMedicineBtn.setForeground(color2);
        SellsInvoicesBtn.setForeground(color2);
        BuyMedicineBtn.setForeground(color2);
        PurchaseInvoicesBtn.setForeground(color2);
        AddUser.setForeground(color2);
        ViewUsersBtn.setForeground(color2);
        save_medicine.setVisible(false);
        Home.setVisible(false);
        profile.setVisible(false);
        medicine_store.setVisible(true);
        AddMedicine.setVisible(false);
        SellsInvoices.setVisible(false);
        purchaseInvoices.setVisible(false);
        buyMedicine.setVisible(false);
        ViewUsers.setVisible(false);
        Searchpanel.setVisible(true);
        Searshbar.setVisible(true);
        Addusers.setVisible(false);
        connection_manager connect = new connection_manager();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        String[] medicines_ = connect.getColumn("medicine", "name");
        for (String i : medicines_) {
            listModel.addElement(i);
        }
        jList1.setModel(listModel);
    }//GEN-LAST:event_MedecineStoreBtnMouseClicked
    private void AddMedicineBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddMedicineBtnMouseClicked
        // TODO add your handling code here:
        Color color = new Color(45,255,255);
        Color color2 = new Color(255,255,255);
        HomeBtn.setForeground(color2);
        Profilebtn.setForeground(color2);
        MedecineStoreBtn.setForeground(color2);
        AddMedicineBtn.setForeground(color);
        SellsInvoicesBtn.setForeground(color2);
        BuyMedicineBtn.setForeground(color2);
        PurchaseInvoicesBtn.setForeground(color2);
        AddUser.setForeground(color2);
        ViewUsersBtn.setForeground(color2);
        Home.setVisible(false);
        profile.setVisible(false);
        medicine_store.setVisible(false);
        AddMedicine.setVisible(true);
        SellsInvoices.setVisible(false);
        purchaseInvoices.setVisible(false);
        buyMedicine.setVisible(false);
        ViewUsers.setVisible(false);
         Addusers.setVisible(false);
    }//GEN-LAST:event_AddMedicineBtnMouseClicked
    private void LogoutBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LogoutBtnMouseClicked
        // TODO add your handling code here:
        int response = JOptionPane.showOptionDialog(null, "Do you want to logout?", "Logout", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new String[] {"Yes","No"}, "No");
        if (response == JOptionPane.YES_OPTION) {
            setVisible(false);
            new Login().setVisible(true);
        }
    }//GEN-LAST:event_LogoutBtnMouseClicked
    private void ExitBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExitBtnMouseClicked
        // TODO add your handling code here:
        int response = JOptionPane.showOptionDialog(null, "Do you want to Exit?", "Exit", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, null, new String[] {"Yes","No"}, "No");
        if (response == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_ExitBtnMouseClicked
    private void SearshbarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearshbarKeyReleased
        connection_manager connect = new connection_manager();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        String searchText = Searshbar.getText().trim();

        if (!searchText.isEmpty()) {
            // Fetch results based on the search text
            String[] results = connect.search("medicine", "name", searchText);
            if (results != null && results.length > 0) {
                // Add all results to the list model
                for (String result : results) {
                    listModel.addElement(result);
                }
            } else {
                listModel.addElement("No results found"); // Display message for no matches
            }
        } else {
            // Display all medicines when the search bar is empty
            for (String medicine : medicines) {
                listModel.addElement(medicine);
            }
        }

        jList1.setModel(listModel); // Update the list
    }//GEN-LAST:event_SearshbarKeyReleased
    private void jList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList1ValueChanged
        // TODO add your handling code here:
        connection_manager connect = new connection_manager();
        String Item = jList1.getSelectedValue();
        String[] medicineInfo = connect.getRow("medicine", "name", Item);
        medicine_id.setText(medicineInfo[0]);
        medicineName.setText(Item);
        medicineSellPrice.setText(medicineInfo[3]);
        MedicineAbout.setText(medicineInfo[5]);
        MedicineAmount.setText(medicineInfo[4]);
        medicine_id_ = medicine_id.getText().trim();
        medicineName_ = medicineName.getText().trim();
        medicineSellingPrice_ = medicineSellPrice.getText().trim();
        medicineAbout_ = MedicineAbout.getText().trim();
        medicineAmount_ = MedicineAmount.getText().trim();
    }//GEN-LAST:event_jList1ValueChanged
    private void Update_medicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Update_medicineActionPerformed
        // TODO add your handling code here:
        if (medicine_id.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "there is no medicine to update");
        }else {
            save_medicine.setVisible(true);
            Cursor cursor = Cursor.getPredefinedCursor(2);
            medicine_id.setFocusable(true);
            medicineName.setFocusable(true);
            MedicineAmount.setFocusable(true);
            medicineSellPrice.setFocusable(true);
            MedicineAbout.setFocusable(true);
            MedicineAbout.setCursor(cursor);
            medicineSellPrice.setCursor(cursor);
            MedicineAmount.setCursor(cursor);
            medicineName.setCursor(cursor);
            medicine_id.setCursor(cursor);
        }
    }//GEN-LAST:event_Update_medicineActionPerformed
    private void medicine_idMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicine_idMouseClicked
        // TODO add your handling code here:
        if (!save_medicine.isShowing()) {
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_medicine_idMouseClicked
    private void medicineNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicineNameMouseClicked
        // TODO add your handling code here:
        if (!save_medicine.isShowing()) {
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_medicineNameMouseClicked
    private void medicineSellPriceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicineSellPriceMouseClicked
        // TODO add your handling code here:
        if (!save_medicine.isShowing()) {
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_medicineSellPriceMouseClicked
    private void MedicineAmountMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicineAmountMouseClicked
        // TODO add your handling code here:
        if (!save_medicine.isShowing()) {
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_MedicineAmountMouseClicked
    private void MedicineAboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MedicineAboutMouseClicked
        // TODO add your handling code here:
        if (!save_medicine.isShowing()) {
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_MedicineAboutMouseClicked
    private void save_medicineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_medicineActionPerformed
    connection_manager connection = new connection_manager();

    // Helper method to validate input
    if (!validateInput()) return;

    // Validate uniqueness
    if (!validateUniqueness(connection)) return;

    // Update database
    updateMedicineData(connection);

    // Clear and reset fields
    resetFields();
    save_medicine.setVisible(false);
    JOptionPane.showMessageDialog(null, "Saved Successfully");
    updateMedicineList(connection);


    }
    private boolean validateInput() {
        if (isFieldEmpty(medicine_id, "Medicine ID")) return false;
        if (isFieldEmpty(medicineName, "Medicine Name")) return false;
        if (isFieldEmpty(MedicineAmount, "Amount")) return false;
        if (isFieldEmpty(medicineSellPrice, "Selling Price")) return false;
        return true;
    }
    private boolean isFieldEmpty(javax.swing.JTextField field, String fieldName) {
        if (field.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, fieldName + " must not be empty");
            field.requestFocusInWindow();
            return true;
        }
        return false;
    }
    private boolean validateUniqueness(connection_manager connection) {
        // Check if medicine ID is unique
        String[] existingIds = connection.getColumn("medicine", "medicine_id");
        for (String id : existingIds) {
            if (id.equals(medicine_id.getText().trim()) && !id.equals(medicine_id_)) {
                JOptionPane.showMessageDialog(null, "This Medicine ID is already in use. Please use another one.");
                medicine_id.requestFocusInWindow();
                return false;
            }
        }

        // Check if medicine name is unique
        String[] existingNames = connection.getColumn("medicine", "name");
        for (String name : existingNames) {
            if (name.equals(medicineName.getText().trim()) && !name.equals(medicineName_)) {
                JOptionPane.showMessageDialog(null, "This Medicine Name is already in use. Please use another one.");
                medicineName.requestFocusInWindow();
                return false;
            }
        }
        return true;
    }
    private void updateMedicineData(connection_manager connection) {
        connection.updateData("medicine", "medicine_id", "name", medicine_id_, medicineName.getText().trim());
        connection.updateData("medicine", "medicine_id", "selling_price", medicine_id_, medicineSellPrice.getText().trim());
        connection.updateData("medicine", "medicine_id", "amount", medicine_id_, MedicineAmount.getText().trim());
        connection.updateData("medicine", "medicine_id", "about", medicine_id_, MedicineAbout.getText().trim());
        connection.updateData("medicine", "medicine_id", "medicine_id", medicine_id_, medicine_id.getText().trim());

        // Update local variables
        medicine_id_ = medicine_id.getText().trim();
        medicineName_ = medicineName.getText().trim();
        medicineAbout_ = MedicineAbout.getText().trim();
        medicineAmount_ = MedicineAmount.getText().trim();
        medicineSellingPrice_ = medicineSellPrice.getText().trim();
    }
    private void resetFields() {
        medicine_id.setText("");
        medicineName.setText("");
        MedicineAmount.setText("");
        medicineSellPrice.setText("");
        MedicineAbout.setText("");

        // Disable editing and update cursor
        setFieldsEditable(false);
    }
    private void setFieldsEditable(boolean editable) {
        java.awt.Cursor defaultCursor = Cursor.getPredefinedCursor(editable ? Cursor.TEXT_CURSOR : Cursor.DEFAULT_CURSOR);

        medicine_id.setFocusable(editable);
        medicineName.setFocusable(editable);
        MedicineAmount.setFocusable(editable);
        medicineSellPrice.setFocusable(editable);
        MedicineAbout.setFocusable(editable);

        medicine_id.setCursor(defaultCursor);
        medicineName.setCursor(defaultCursor);
        MedicineAmount.setCursor(defaultCursor);
        medicineSellPrice.setCursor(defaultCursor);
        MedicineAbout.setCursor(defaultCursor);
    }
    private void updateMedicineList(connection_manager connection) {
    String[] medicines = connection.getColumn("medicine", "name");
    DefaultListModel<String> listModel = new DefaultListModel<>();
    for (String medicine : medicines) {
        listModel.addElement(medicine);
    }
    jList1.setModel(listModel); // Update the list view
    }//GEN-LAST:event_save_medicineActionPerformed
    private void ResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetBtnActionPerformed
        // TODO add your handling code here:
        MedicineAmountAdd.setText("");
        MedicineIdAdd.setText("");
        MedicineNameAdd.setText("");
        AboutMedicineAdd.setText("");
        SellPriceAdd.setText("");
        BuyPriceAdd.setText("");
    }//GEN-LAST:event_ResetBtnActionPerformed
    private void addMedicineBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMedicineBtnActionPerformed
        // TODO add your handling code here:
        connection_manager connect = new connection_manager();
        String[] existingIds = connect.getColumn("medicine", "medicine_id");
        boolean check = true;
        for (String id : existingIds) {
            if (id.equals(MedicineIdAdd.getText().trim())) {
                JOptionPane.showMessageDialog(null, "This Medicine ID is already in use. Please use another one.");
                MedicineIdAdd.requestFocusInWindow();
                check = false;
            }
        }
        String[] existingNames = connect.getColumn("medicine", "name");
        for (String name : existingNames) {
            if (name.equals(MedicineNameAdd.getText().trim())) {
                JOptionPane.showMessageDialog(null, "This Medicine Name is already in use. Please use another one.");
                MedicineNameAdd.requestFocusInWindow();
                check = false;
            }
        }       
        if (check) {
            String UpdatedElements = MedicineIdAdd.getText() + ","
                                    + MedicineNameAdd.getText() + ","
                                    + BuyPriceAdd.getText() + ","
                                    + SellPriceAdd.getText() + ","
                                    +MedicineAmountAdd.getText() + ","
                                    +AboutMedicineAdd.getText();
            connect.pushData("medicine", "medicine_id,name,buying_price,selling_price,amount,about", UpdatedElements);            
            JOptionPane.showMessageDialog(null, "Saved successfully");
            MedicineAmountAdd.setText("");
            MedicineIdAdd.setText("");
            MedicineNameAdd.setText("");
            AboutMedicineAdd.setText("");
            SellPriceAdd.setText("");
            BuyPriceAdd.setText("");
            medicines = connect.getColumn("medicine", "name");
        }
        
    }//GEN-LAST:event_addMedicineBtnActionPerformed
    
    private void jList3ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList3ValueChanged
        // TODO add your handling code here:
        connection_manager connect = new connection_manager();
        
        String Date = jList3.getSelectedValue().split(" ")[0];
        String time = jList3.getSelectedValue().split(" ")[2];
        String invoice_date = connect.search("sellsinvoices", "sells_date", time)[0];
        //sells_id
        String idtemp = connect.getRow("sellsinvoices", "sells_date", invoice_date)[0];
        String Pharma_id = connect.getRow("sellsinvoices", "sells_date", invoice_date)[1];
        //medicine_id
        String[] medId = connect.getColumn("sellsinvoices", "medicine_id", idtemp);
        String[] amount = connect.getColumn("sellsinvoices", "amount", idtemp);
        String[] price = connect.getColumn("sellsinvoices", "price", idtemp);
        String[] total = connect.getColumn("sellsinvoices", "total", idtemp);
        double sum = 0;
        for (int i = 0; i < total.length;i++) {
            sum += Double.parseDouble(total[i]);
        }
        String[] medicinesname = new String[amount.length];
        for (int i = 0; i < amount.length;i++) {
            medicinesname[i] = connect.getRow("medicine", "medicine_id", medId[i])[1];
        }
        String[] columnnames = {"Medicine ID","Medicine Name","Price per unit","Units","Total"};
        DefaultTableModel modelTable = new DefaultTableModel(columnnames, 0);
        for (int i = 0; i < medId.length; i++) {
            modelTable.addRow(new String[]{
                medId[i], 
                medicinesname[i], 
                price[i], 
                amount[i], 
                total[i]
            });
        }

        
        Sells_id.setText(idtemp);
        InvoiceTime.setText(time.substring(0, time.length() - 3));
        InvoiceDate.setText(Date);
        TotalPriceOfInvoice.setText(String.valueOf(sum));
        PharmacistNameSellsInvoices.setText("By " +connect.getRow("pharmacist", "pharma_id", Pharma_id)[6]);
       jTable1.setModel(modelTable);
    }//GEN-LAST:event_jList3ValueChanged
    private void SearshbarInvoicesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearshbarInvoicesKeyReleased
        // TODO add your handling code here:
        connection_manager connect = new connection_manager();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        String searchText = SearshbarInvoices.getText().trim();
        if (!searchText.isEmpty()) {
            // Fetch results based on the search text
            DefaultListModel<String> listModel1 = setSellsListModel();
            Object[] elements = listModel1.toArray();
            for (int i = 0; i < elements.length;i++) {
                if(elements[i].toString().contains(searchText)) {                    
                    listModel.addElement(elements[i].toString());
                }
            }
            if(listModel.size() == 0) {
                listModel.addElement("No results found!");
            }
        } else {
            // Display all medicines when the search bar is empty
            setSellsListModel();
            return;
        }

        jList3.setModel(listModel); // Update the list
    }//GEN-LAST:event_SearshbarInvoicesKeyReleased
    private void ViewUsersBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ViewUsersBtnMouseClicked
        // TODO add your handling code here:
        Color color = new Color(45,255,255);
        Color color2 = new Color(255,255,255);
        HomeBtn.setForeground(color2);
        Profilebtn.setForeground(color2);
        MedecineStoreBtn.setForeground(color2);
        AddMedicineBtn.setForeground(color2);
        SellsInvoicesBtn.setForeground(color2);
        BuyMedicineBtn.setForeground(color2);
        PurchaseInvoicesBtn.setForeground(color2);
        AddUser.setForeground(color2);
        ViewUsersBtn.setForeground(color);
        Home.setVisible(false);
        profile.setVisible(false);
        medicine_store.setVisible(false);
        AddMedicine.setVisible(false);
        SellsInvoices.setVisible(false);
        purchaseInvoices.setVisible(false);
        buyMedicine.setVisible(false);
        ViewUsers.setVisible(true);
        save_user.setVisible(false);
         Addusers.setVisible(false);
        DefaultListModel<String> listModel10 = new DefaultListModel<>();
        connection_manager connect = new connection_manager();
        String[] Admin_names;
        Admin_names = connect.getColumn("admin", "user_name");
        String[] pharmacist_names;
        pharmacist_names = connect.getColumn("pharmacist", "user_name");         
        
        for (int i = 0; i < Admin_names.length;i++) {
            listModel10.addElement(Admin_names[i]);
        }
        for (int i = 0; i < pharmacist_names.length;i++) {
            listModel10.addElement(pharmacist_names[i]);
        }       
        jList6.setModel(listModel10);
    }//GEN-LAST:event_ViewUsersBtnMouseClicked
    private void BuyMedicineBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BuyMedicineBtnMouseClicked
        // TODO add your handling code here:
        Color color = new Color(45,255,255);
        Color color2 = new Color(255,255,255);
        HomeBtn.setForeground(color2);
        Profilebtn.setForeground(color2);
        MedecineStoreBtn.setForeground(color2);
        AddMedicineBtn.setForeground(color2);
        SellsInvoicesBtn.setForeground(color2);
        BuyMedicineBtn.setForeground(color);
        PurchaseInvoicesBtn.setForeground(color2);
        AddUser.setForeground(color2);
        ViewUsersBtn.setForeground(color2);
        Home.setVisible(false);
        profile.setVisible(false);
        medicine_store.setVisible(false);
        AddMedicine.setVisible(false);
        SellsInvoices.setVisible(false);
        purchaseInvoices.setVisible(false);
        buyMedicine.setVisible(true);
        ViewUsers.setVisible(false);
         Addusers.setVisible(false);
        connection_manager connect = new connection_manager();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        String[] medicines_ = connect.getColumn("medicine", "name");
        for (String i : medicines_) {
            listModel.addElement(i);
        }
        jList4.setModel(listModel);
    }//GEN-LAST:event_BuyMedicineBtnMouseClicked
    private void PurchaseInvoicesBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PurchaseInvoicesBtnMouseClicked
        // TODO add your handling code here:
        Color color = new Color(45,255,255);
        Color color2 = new Color(255,255,255);
        HomeBtn.setForeground(color2);
        Profilebtn.setForeground(color2);
        MedecineStoreBtn.setForeground(color2);
        AddMedicineBtn.setForeground(color2);
        SellsInvoicesBtn.setForeground(color2);
        BuyMedicineBtn.setForeground(color2);
        PurchaseInvoicesBtn.setForeground(color);
        AddUser.setForeground(color2);
        ViewUsersBtn.setForeground(color2);
        Home.setVisible(false);
        profile.setVisible(false);
        medicine_store.setVisible(false);
        AddMedicine.setVisible(false);
        SellsInvoices.setVisible(false);
        purchaseInvoices.setVisible(true);
        buyMedicine.setVisible(false);
        ViewUsers.setVisible(false);
         Addusers.setVisible(false);
        setPurchaseinvoicesmodel();
    }//GEN-LAST:event_PurchaseInvoicesBtnMouseClicked
    private void jList4ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList4ValueChanged
        // TODO add your handling code here:
        connection_manager connect = new connection_manager();
        String Item = jList4.getSelectedValue();
        String[] medicineInfo = connect.getRow("medicine", "name", Item);
        medicine_id_Buy.setText(medicineInfo[0]);
        medicineNameBuy.setText(Item);
        MedicinePriceBuy.setText(medicineInfo[2]);
        
        totalBuy.setText("");
        NoOfUnitsBuy.setText("");
    }//GEN-LAST:event_jList4ValueChanged
    private void SearshbarBuyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearshbarBuyKeyReleased
        // TODO add your handling code here:
        connection_manager connect = new connection_manager();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        String searchText = SearshbarBuy.getText().trim();

        if (!searchText.isEmpty()) {
            // Fetch results based on the search text
            String[] results = connect.search("medicine", "name", searchText);
            if (results != null && results.length > 0) {
                // Add all results to the list model
                for (String result : results) {
                    listModel.addElement(result);
                }
            } else {
                listModel.addElement("No results found"); // Display message for no matches
            }
        } else {
            // Display all medicines when the search bar is empty
            for (String medicine : medicines) {
                listModel.addElement(medicine);
            }
        }

        jList4.setModel(listModel); // Update the list
    }//GEN-LAST:event_SearshbarBuyKeyReleased
    private void NoOfUnitsBuyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_NoOfUnitsBuyKeyReleased
        // TODO add your handling code here:
        if(NoOfUnitsBuy.getText().matches("\\d+")){
            double multi = Double.parseDouble(MedicinePriceBuy.getText()) * Double.parseDouble(NoOfUnitsBuy.getText()) ;
            totalBuy.setText(String.valueOf(multi));
        }else {
            if (NoOfUnitsBuy.getText().isEmpty()) totalBuy.setText("");
            return;
        }  
    }//GEN-LAST:event_NoOfUnitsBuyKeyReleased
    private void AddToCartBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToCartBuyActionPerformed
        // TODO add your handling code here:
                if (!totalBuy.getText().isEmpty()) {
            String[] rowInfoTable2 = {
                
                medicine_id_Buy.getText(),
                medicineNameBuy.getText(),
                MedicinePriceBuy.getText(),
                NoOfUnitsBuy.getText(),
                totalBuy.getText()
                
                };            
            modelTable2.addRow(rowInfoTable2);
            jTable3.setModel(modelTable2);
            
            Total += Double.parseDouble(totalBuy.getText());
            TotalPuarchaceBill.setText(String.valueOf(Total));
        } else {
            if (NoOfUnitsBuy.getText().isEmpty()) 
                JOptionPane.showMessageDialog(null, "Nothing to add!");
             else
                JOptionPane.showMessageDialog(null, "Invalid data in No of units field");               
        }
    }//GEN-LAST:event_AddToCartBuyActionPerformed
    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
                // Show confirmation dialog
        int result = JOptionPane.showConfirmDialog(
            null,
            "Do you want to delete this item?", // Message
            "Delete",                          // Title
            JOptionPane.YES_NO_OPTION          // Option type
        );

        if (result == JOptionPane.YES_OPTION) {
            int selectedRow = jTable3.getSelectedRow();

            if (selectedRow != -1) { // Ensure a row is selected
                // Get the total value from the row before deleting
                double rowTotal = Double.parseDouble(jTable3.getValueAt(selectedRow, 4).toString());

                // Remove the selected row
                modelTable2.removeRow(selectedRow);

                // Update the total bill
                double currentTotal = Double.parseDouble(TotalPuarchaceBill.getText());
                TotalPuarchaceBill.setText(String.valueOf(currentTotal - rowTotal));
                Total = currentTotal - rowTotal;
            } else {
                JOptionPane.showMessageDialog(null, "No row selected!");
            }
        } else {
            jTable3.clearSelection(); // Clear selection if "No" is clicked
        }
    }//GEN-LAST:event_jTable3MouseClicked
    private void ConfirmBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmBuyActionPerformed
        // TODO add your handling code here:
                // TODO add your handling code here:
    connection_manager connect = new connection_manager();
    int response = JOptionPane.showConfirmDialog(
        null,
        "are you finish?", 
        "Confirm Sale",                                         
        JOptionPane.YES_NO_OPTION                                
    );

    if (response == JOptionPane.YES_OPTION) {
        // Get data from table
        String[] medicineID1 = new String[modelTable2.getRowCount()];
        String[] price1 = new String[modelTable2.getRowCount()];
        String[] amount1 = new String[modelTable2.getRowCount()];
        String[] total1 = new String[modelTable2.getRowCount()];

        for (int i = 0; i < modelTable2.getRowCount(); i++) {
            medicineID1[i] = modelTable2.getValueAt(i, 0) != null 
                             ? modelTable2.getValueAt(i, 0).toString() : "";
            price1[i] = modelTable2.getValueAt(i, 2) != null 
                        ? modelTable2.getValueAt(i, 2).toString() : "";
            amount1[i] = modelTable2.getValueAt(i, 3) != null 
                         ? modelTable2.getValueAt(i, 3).toString() : "";
            total1[i] = modelTable2.getValueAt(i, 4) != null 
                        ? modelTable2.getValueAt(i, 4).toString() : "";
        }

        // Inserting data into the database
        connect.storeinvoices("purchaseinvoices", id_, medicineID1, amount1, price1, total1);

        // Reset table (iterate in reverse order to avoid index shifting)
        for (int i = modelTable2.getRowCount() - 1; i >= 0; i--) {
            modelTable2.removeRow(i);
        }
        
        // No need for jTable2.setModel(modelTable2), as rows are directly removed
        Total = 0;
        TotalPuarchaceBill.setText("00");
    }
    }//GEN-LAST:event_ConfirmBuyActionPerformed
    private void SellsInvoicesBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SellsInvoicesBtnMouseClicked
        // TODO add your handling code here:
        Color color = new Color(45,255,255);
        Color color2 = new Color(255,255,255);
        HomeBtn.setForeground(color2);
        Profilebtn.setForeground(color2);
        MedecineStoreBtn.setForeground(color2);
        AddMedicineBtn.setForeground(color2);
        SellsInvoicesBtn.setForeground(color);
        BuyMedicineBtn.setForeground(color2);
        PurchaseInvoicesBtn.setForeground(color2);
        AddUser.setForeground(color2);
        ViewUsersBtn.setForeground(color2);
        Home.setVisible(false);
        profile.setVisible(false);
        medicine_store.setVisible(false);
        AddMedicine.setVisible(false);
        SellsInvoices.setVisible(true);
        purchaseInvoices.setVisible(false);
        buyMedicine.setVisible(false);
        ViewUsers.setVisible(false);
        setSellsListModel();
    }//GEN-LAST:event_SellsInvoicesBtnMouseClicked
    private DefaultListModel <String> setPurchaseinvoicesmodel() {
        connection_manager connect = new connection_manager();
        DefaultListModel<String> listModelInvoices = new DefaultListModel<>();
        String[] invoices_id_ = connect.getColumn("purchaseinvoices", "parchase_id");
        String[] temp = connect.getColumn("purchaseinvoices", "purchase_date");

        // Initialize arrays for date and time
        String[] invoices_Date_ = new String[temp.length];
        String[] invoices_time_ = new String[temp.length];

        // Set to hold unique date-time combinations
        Set<String> uniqueInvoices = new HashSet<>();

        // Split date and time, and store unique combinations in the Set
        for (int i = 0; i < temp.length; i++) {
            invoices_Date_[i] = temp[i].split(" ")[0];
            invoices_time_[i] = temp[i].split(" ")[1];

            // Add unique date-time combination to the Set
            uniqueInvoices.add(invoices_Date_[i] + " at " + invoices_time_[i]);
        }

        // Add the unique elements from the Set to the DefaultListModel
        for (String invoice : uniqueInvoices) {
            listModelInvoices.addElement(invoice);
        }

        // Set the model to the JList
        jList5.setModel(listModelInvoices);
        return listModelInvoices;
    }
    private void SearshbarInvoices2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearshbarInvoices2KeyReleased
        // TODO add your handling code here:
        connection_manager connect = new connection_manager();
        DefaultListModel<String> listModel = new DefaultListModel<>();
        String searchText = SearshbarInvoices2.getText().trim();
        if (!searchText.isEmpty()) {
            // Fetch results based on the search text
            DefaultListModel<String> listModel1 = setPurchaseinvoicesmodel();
            Object[] elements = listModel1.toArray();
            for (int i = 0; i < elements.length;i++) {
                if(elements[i].toString().contains(searchText)) {                    
                    listModel.addElement(elements[i].toString());
                }
            }
            if(listModel.size() == 0) {
                listModel.addElement("No results found!");
            }
        } else {
            // Display all medicines when the search bar is empty
            setPurchaseinvoicesmodel();
            return;
        }

        jList5.setModel(listModel); // Update the list
    }//GEN-LAST:event_SearshbarInvoices2KeyReleased
    private void jList5ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList5ValueChanged
        // TODO add your handling code here:
        connection_manager connect = new connection_manager();
        
        String Date = jList5.getSelectedValue().split(" ")[0];
        String time = jList5.getSelectedValue().split(" ")[2];
        String invoice_date = connect.search("purchaseinvoices", "purchase_date", time)[0];
        //sells_id
        String idtemp = connect.getRow("purchaseinvoices", "purchase_date", invoice_date)[0];
        String admin_id = connect.getRow("purchaseinvoices", "purchase_date", invoice_date)[1];
        //medicine_id
        String[] medId = connect.getColumn("purchaseinvoices", "medicine_id", idtemp);
        String[] amount = connect.getColumn("purchaseinvoices", "quantity", idtemp);
        String[] price = connect.getColumn("purchaseinvoices", "price", idtemp);
        String[] total = connect.getColumn("purchaseinvoices", "total", idtemp);
        double sum = 0;
        for (int i = 0; i < total.length;i++) {
            sum += Double.parseDouble(total[i]);
        }
        String[] medicinesname = new String[amount.length];
        for (int i = 0; i < amount.length;i++) {
            medicinesname[i] = connect.getRow("medicine", "medicine_id", medId[i])[1];
        }
        String[] columnnames = {"Medicine ID","Medicine Name","Price per unit","Units","Total"};
        DefaultTableModel modelTable = new DefaultTableModel(columnnames, 0);
        for (int i = 0; i < medId.length; i++) {
            modelTable.addRow(new String[]{
                medId[i], 
                medicinesname[i],  
                price[i], 
                amount[i], 
                total[i]
            });
        }

        
        Purchase_id.setText(idtemp);
        InvoiceTime2.setText(time.substring(0, time.length() - 3));
        InvoiceDate2.setText(Date);
        TotalPriceOfInvoice2.setText(String.valueOf(sum));
        AdminNamePurchaseInvoices.setText("By " +connect.getRow("admin", "admin_id", admin_id)[6]);
        jTable2.setModel(modelTable);
        
    }//GEN-LAST:event_jList5ValueChanged

    private void jList6ValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_jList6ValueChanged
    // جلب اسم المستخدم المحدد
       String user = jList6.getSelectedValue();
       connection_manager connect = new connection_manager();

       // التحقق من الدور المحدد
       String role = role_user.getSelectedItem().toString();
       String[] user_info = null;
       if ("Admins".equals(role)) {
           user_info = connect.getRow("admin", "user_name", user);
       } else if ("Pharmacists".equals(role)) {
           user_info = connect.getRow("pharmacist", "user_name", user);
       } else if ("All".equals(role)) {
           user_info = connect.getRow("admin", "user_name", user);
           if (user_info == null || user_info[0] == null) {
               user_info = connect.getRow("pharmacist", "user_name", user);
           }
       }
       // تعبئة الحقول بالمعلومات
       user_id.setText(user_info[0]);
       if(user_info[1].equals("admin"))
            role_user_lable.setSelectedIndex(0);
       else 
            role_user_lable.setSelectedIndex(1);
       
        nameOfUser.setText(user_info[2]); 
        userEmail.setText(user_info[3]);
        UserPhone.setText(user_info[4]);
       if(role_user_lable.getSelectedItem().toString().equals("admin")) {
           user_nameOfUsers.setText(user_info[5]); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
           userPassword.setText(user_info[6]); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
           UserSallary.setText(user_info[7]);
       } else {
           user_nameOfUsers.setText(user_info[6]); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
           userPassword.setText(user_info[7]); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
           UserSallary.setText(user_info[5]);
       }
        // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
    }//GEN-LAST:event_jList6ValueChanged

    private void nameOfUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nameOfUserMouseClicked
        // TODO add your handling code here:
        if (!save_user.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_nameOfUserMouseClicked

    private void user_idMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_idMouseClicked
        // TODO add your handling code here:
        if (!save_user.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_user_idMouseClicked

    private void user_nameOfUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_nameOfUsersMouseClicked
        // TODO add your handling code here:
        if (!save_user.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_user_nameOfUsersMouseClicked

    private void UpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateUserActionPerformed
        // TODO add your handling code here:
        if(!user_id.getText().isEmpty()) {
            save_user.setVisible(true);
            user_id.setFocusable(true);
            role_user_lable.setFocusable(true);
            nameOfUser.setFocusable(true);
            userEmail.setFocusable(true);
            UserPhone.setFocusable(true);
            user_nameOfUsers.setFocusable(true); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
            userPassword.setFocusable(true); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
            UserSallary.setFocusable(true);
            Cursor cursor = Cursor.getPredefinedCursor(2);
            user_id.setCursor(cursor);
            role_user_lable.setCursor(cursor);
            nameOfUser.setCursor(cursor);
            userEmail.setCursor(cursor);
            UserPhone.setCursor(cursor);
            user_nameOfUsers.setCursor(cursor); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
            userPassword.setCursor(cursor); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
            UserSallary.setCursor(cursor);
        }else {
            JOptionPane.showMessageDialog(null, "There is no user to Update");
        }
        
    }//GEN-LAST:event_UpdateUserActionPerformed

    private void save_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_userActionPerformed
        // TODO add your handling code here:
        connection_manager connect = new connection_manager();
        //check if is empty
        String userId_ = user_id.getText();
        String nameOfUser_ = nameOfUser.getText();
        String userEmail_ = userEmail.getText();
        String UserPhone_ = UserPhone.getText();
        String user_nameOfUsers_ = user_nameOfUsers.getText();
        String userPassword_ = userPassword.getText();
        String UserSallary_ = UserSallary.getText();
        
        if(user_id.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "id musn't be empty");
            user_id.requestFocusInWindow();
        }
        if(role_user_lable.getSelectedItem().toString().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "role musn't be empty");
            role_user_lable.requestFocusInWindow();
        }
        if(nameOfUser.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "name musn't be empty");
            nameOfUser.requestFocusInWindow();
        }
        if(userEmail.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "email musn't be empty");
            userEmail.requestFocusInWindow();
        }
        if(UserPhone.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "phone musn't be empty");
            UserPhone.requestFocusInWindow();
        } 
        //check sallary
        if(user_nameOfUsers.getText().trim().isEmpty() || sallary.getText().matches("\\\\d+")) {
            JOptionPane.showMessageDialog(null, "invalid value in username field");
            user_nameOfUsers.requestFocusInWindow();
        }
        if(userPassword.getText().trim().isEmpty() || sallary.getText().matches("\\\\d+")) {
            JOptionPane.showMessageDialog(null, "invalid value in password field");
            userPassword.requestFocusInWindow();
        }
        if(UserSallary.getText().trim().isEmpty() || sallary.getText().matches("\\\\d+")) {
            JOptionPane.showMessageDialog(null, "invalid value in sallary field");
            UserSallary.requestFocusInWindow();
        }
        String role_ = role_user_lable.getSelectedItem().toString();
        //check if there is a same user name
        boolean checker = true;
        String[] usernames = connect.getColumn(role_ , "user_name");
        for (String i : usernames) {
            if (i.equals(user_nameOfUsers.getText().trim()) && !i.equals(user_nameOfUsers_)){
                JOptionPane.showMessageDialog(null, "this user name is used please write another one");
                user_nameOfUsers.requestFocusInWindow();
                checker = false;
                break;
            }
        }
        
        //Phone_
        String[] Phones = connect.getColumn(role_ , "phone");
        for (String i : Phones) {
            if (i.equals(UserPhone.getText().trim()) && !i.equals(UserPhone_)) {
                JOptionPane.showMessageDialog(null, "this phone is used please write another one");
                UserPhone.requestFocusInWindow();
                checker = false;
                break;
            }
        }
        //Email_
        String[] emails = connect.getColumn(role_ , "email");
        for (String i : emails) {
            if (i.equals(userEmail.getText().trim()) && !i.equals(userEmail_)) {
                JOptionPane.showMessageDialog(null, "this email is used please write another one");
                userEmail.requestFocusInWindow();
                checker = false;
                break;
            }
        }
        
        if (checker) {
            if (role_.equals("Admin")) {
                connect.updateData(role_, "admin_id", "user_name", userId_, user_nameOfUsers.getText().trim());
                connect.updateData(role_, "admin_id", "user_role", userId_, role_user_lable.getSelectedItem().toString().trim());
                connect.updateData(role_, "admin_id", "admin_id", userId_, user_id.getText().trim());
                connect.updateData(role_, "admin_id", "name", userId_, nameOfUser.getText().trim());
                connect.updateData(role_, "admin_id", "password", userId_, userPassword.getText().trim());
                connect.updateData(role_, "admin_id", "phone", userId_, UserPhone.getText().trim());
                connect.updateData(role_, "admin_id", "email", userId_, userEmail.getText().trim());
                connect.updateData(role_, "admin_id", "sallary", userId_, UserSallary.getText().trim());
            }
            else {
                connect.updateData(role_, "pharma_id", "user_name", userId_, user_nameOfUsers.getText().trim());
                connect.updateData(role_, "pharma_id", "user_role", userId_, role_user_lable.getSelectedItem().toString().trim());
                connect.updateData(role_, "pharma_id", "pharma_id", userId_, user_id.getText().trim());
                connect.updateData(role_, "pharma_id", "name", userId_, nameOfUser.getText().trim());
                connect.updateData(role_, "pharma_id", "password", userId_, userPassword.getText().trim());
                connect.updateData(role_, "pharma_id", "phone", userId_, UserPhone.getText().trim());
                connect.updateData(role_, "pharma_id", "email", userId_, userEmail.getText().trim());
                connect.updateData(role_, "pharma_id", "salary", userId_, UserSallary.getText().trim());
                
            }
            JOptionPane.showMessageDialog(null, "Saved Successfully");
            save_user.setVisible(false);
            user_id.setFocusable(false);
            role_user_lable.setFocusable(false);
            nameOfUser.setFocusable(false);
            userEmail.setFocusable(false);
            UserPhone.setFocusable(false);
            user_nameOfUsers.setFocusable(false); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
            userPassword.setFocusable(false); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
            UserSallary.setFocusable(false);
            Cursor cursor = Cursor.getPredefinedCursor(0);
            user_id.setCursor(cursor);
            role_user_lable.setCursor(cursor);
            nameOfUser.setCursor(cursor);
            userEmail.setCursor(cursor);
            UserPhone.setCursor(cursor);
            user_nameOfUsers.setCursor(cursor); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
            userPassword.setCursor(cursor); // إذا كان الحقل مختلفًا بين الجداول، قم بتعديله هنا.
            UserSallary.setCursor(cursor);
            DefaultListModel<String> listModel10 = new DefaultListModel<>();
            String[] Admin_names;
            Admin_names = connect.getColumn("admin", "user_name");
            String[] pharmacist_names;
            pharmacist_names = connect.getColumn("pharmacist", "user_name");         
            for (int i = 0; i < Admin_names.length;i++) {
                listModel10.addElement(Admin_names[i]);
            }
            for (int i = 0; i < pharmacist_names.length;i++) {
                listModel10.addElement(pharmacist_names[i]);
            }       
            jList6.setModel(listModel10);
            }
    }//GEN-LAST:event_save_userActionPerformed

    private void role_userFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_role_userFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_role_userFocusGained

    private void role_userFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_role_userFocusLost

    }//GEN-LAST:event_role_userFocusLost

    private void role_userActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_role_userActionPerformed
        // TODO add your handling code here:
        DefaultListModel<String> listModel = new DefaultListModel<>();
        connection_manager connect = new connection_manager();
        String[] Admins = connect.getColumn("admin", "user_name");
        String[] Pharmacists = connect.getColumn("pharmacist", "user_name");
        // تحديد نوع المستخدم بناءً على العنصر المحدد
        if (role_user.getSelectedItem().toString().equals("Admins")) {
            for (int i = 0; i < Admins.length; i++) {
            listModel.addElement(Admins[i]);
            }
        } else if (role_user.getSelectedItem().toString().equals("Pharmacists")) {
            for (int i = 0; i < Pharmacists.length; i++) {
            listModel.addElement(Pharmacists[i]);
            }
        } else if (role_user.getSelectedItem().toString().equals("All")) {           
            for (int i = 0; i < Admins.length; i++) {
            listModel.addElement(Admins[i]);
            }
            
            for (int i = 0; i < Pharmacists.length; i++) {
            listModel.addElement(Pharmacists[i]);
            }
        }

        jList6.setModel(listModel);
    }//GEN-LAST:event_role_userActionPerformed

    private void userEmailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userEmailMouseClicked
        // TODO add your handling code here:
        if (!save_user.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_userEmailMouseClicked

    private void UserPhoneMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserPhoneMouseClicked
        // TODO add your handling code here:
        if (!save_user.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_UserPhoneMouseClicked

    private void UserSallaryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserSallaryMouseClicked
        // TODO add your handling code here:
        if (!save_user.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_UserSallaryMouseClicked

    private void userPasswordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userPasswordMouseClicked
        // TODO add your handling code here:
        if (!save_user.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_userPasswordMouseClicked

    private void role_user_lableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_role_user_lableMouseClicked
        // TODO add your handling code here:
        if (!save_user.isShowing()){
            JOptionPane.showMessageDialog(rootPane, "Please click update button to enable updating");
        }
    }//GEN-LAST:event_role_user_lableMouseClicked

    private void AddUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AddUserMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
        Color color = new Color(45,255,255);
        Color color2 = new Color(255,255,255);
        HomeBtn.setForeground(color2);
        Profilebtn.setForeground(color2);
        MedecineStoreBtn.setForeground(color2);
        AddMedicineBtn.setForeground(color2);
        SellsInvoicesBtn.setForeground(color2);
        BuyMedicineBtn.setForeground(color2);
        PurchaseInvoicesBtn.setForeground(color2);
        AddUser.setForeground(color);
        ViewUsersBtn.setForeground(color2);
        Home.setVisible(false);
        profile.setVisible(false);
        medicine_store.setVisible(false);
        AddMedicine.setVisible(false);
        SellsInvoices.setVisible(false);
        purchaseInvoices.setVisible(false);
        buyMedicine.setVisible(false);
        ViewUsers.setVisible(false);
        Addusers.setVisible(true);
    }//GEN-LAST:event_AddUserMouseClicked

    private void AddUserResetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddUserResetBtnActionPerformed
        // TODO add your handling code here:
        AddUserId.setText("");
        AddUserEmail.setText("");
        AddUserPassword.setText("");
        AddUserSallary.setText("");
        AddUserPhone.setText("");
        AddUserName.setText("");
        AddUserUsername.setText("");
    }//GEN-LAST:event_AddUserResetBtnActionPerformed

    private void AddUserSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddUserSaveBtnActionPerformed
        // TODO add your handling code here:
        String AddUserId_ = AddUserId.getText();
        String AddUserEmail_ = AddUserEmail.getText();
        String AddUserPassword_ = AddUserPassword.getText();
        String AddUserSallary_ = AddUserSallary.getText();
        String AddUserPhone_ = AddUserPhone.getText();
        String AddUserName_ = AddUserName.getText();
        String AddUserUsername_ = AddUserUsername.getText();
        connection_manager connect = new connection_manager();
        String idname = "";
        if(AddUserRole.getSelectedItem().equals("admin"))
            idname = "admin_id";
        else 
            idname = "pharma_id";
        String[] ids = connect.getColumn(AddUserRole.getSelectedItem().toString(), idname);
        String[] Emails = connect.getColumn(AddUserRole.getSelectedItem().toString(), "email");
        String[] UserNames = connect.getColumn(AddUserRole.getSelectedItem().toString(), "user_name");
        for (int i = 0; i < ids.length;i++) {
            if (AddUserId_.equals(ids[i])){
                JOptionPane.showMessageDialog(null, "there is a user have the same id");
                AddUserId.requestFocus();
                return;
            }
        }
        for (int i = 0; i < Emails.length;i++) {
            if (AddUserEmail_.equals(Emails[i])){
                JOptionPane.showMessageDialog(null, "there is a user have the same id");
                AddUserEmail.requestFocus();
                return;
            }
        }
        for (int i = 0; i < UserNames.length;i++) {
            if (AddUserUsername_.equals(UserNames[i])){
                JOptionPane.showMessageDialog(null, "there is a user have the same id");
                AddUserUsername.requestFocus();
                return;
            }
        }
        String columnNames = "";
        String Values = AddUserId_ + "," + 
                AddUserRole.getSelectedItem().toString() + "," + 
                AddUserName_ + "," + 
                AddUserEmail_  + "," +
                AddUserPhone_ + "," +
                AddUserUsername_ + "," +
                AddUserPassword_ + "," +
                AddUserSallary_;
        if(AddUserRole.getSelectedItem().toString().equals("admin"))
            columnNames = "admin_id,user_role,name,email,phone,user_name,password,sallary";
        else
            columnNames = "pharma_id,user_role,name,email,phone,user_name,password,salary";     
        connect.pushData(AddUserRole.getSelectedItem().toString(), columnNames, Values);
        
        JOptionPane.showMessageDialog(null, "Saved Successfully");
        AddUserId.setText("");
        AddUserEmail.setText("");
        AddUserPassword.setText("");
        AddUserSallary.setText("");
        AddUserPhone.setText("");
        AddUserName.setText("");
        AddUserUsername.setText("");
    }//GEN-LAST:event_AddUserSaveBtnActionPerformed
  
    
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminDashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminDashboard().setVisible(true);
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AboutMedicineAdd;
    private javax.swing.JPanel AddMedicine;
    private javax.swing.JLabel AddMedicineBtn;
    private javax.swing.JButton AddToCartBuy;
    private javax.swing.JLabel AddUser;
    private javax.swing.JTextField AddUserEmail;
    private javax.swing.JTextField AddUserId;
    private javax.swing.JTextField AddUserName;
    private javax.swing.JPasswordField AddUserPassword;
    private javax.swing.JTextField AddUserPhone;
    private javax.swing.JButton AddUserResetBtn;
    private javax.swing.JComboBox<String> AddUserRole;
    private javax.swing.JTextField AddUserSallary;
    private javax.swing.JButton AddUserSaveBtn;
    private javax.swing.JTextField AddUserUsername;
    private javax.swing.JPanel Addusers;
    private javax.swing.JLabel AdminNamePurchaseInvoices;
    private javax.swing.JLabel BuyMedicineBtn;
    private javax.swing.JTextField BuyPriceAdd;
    private javax.swing.JButton ConfirmBuy;
    private javax.swing.JLabel ExitBtn;
    private javax.swing.JPanel Home;
    private javax.swing.JLabel HomeBtn;
    private javax.swing.JTextField InvoiceDate;
    private javax.swing.JTextField InvoiceDate2;
    private javax.swing.JTextField InvoiceTime;
    private javax.swing.JTextField InvoiceTime2;
    private javax.swing.JLabel LogoutBtn;
    private javax.swing.JLabel MedecineStoreBtn;
    private javax.swing.JTextArea MedicineAbout;
    private javax.swing.JTextField MedicineAmount;
    private javax.swing.JTextField MedicineAmountAdd;
    private javax.swing.JTextField MedicineIdAdd;
    private javax.swing.JTextField MedicineNameAdd;
    private javax.swing.JTextField MedicinePriceBuy;
    private javax.swing.JPanel MedicineProperies;
    private javax.swing.JPanel MedicineProperies1;
    private javax.swing.JTextField NoOfUnitsBuy;
    private javax.swing.JLabel PharmacistNameSellsInvoices;
    private javax.swing.JLabel Profilebtn;
    private javax.swing.JLabel PurchaseInvoicesBtn;
    private javax.swing.JTextField Purchase_id;
    private javax.swing.JButton ResetBtn;
    private javax.swing.JPanel Searchpanel;
    private javax.swing.JPanel Searchpanel3;
    private javax.swing.JPanel Searchpanel4;
    private javax.swing.JPanel Searchpanel5;
    private javax.swing.JTextField Searshbar;
    private javax.swing.JTextField SearshbarBuy;
    private javax.swing.JTextField SearshbarInvoices;
    private javax.swing.JTextField SearshbarInvoices2;
    private javax.swing.JTextField SellPriceAdd;
    private javax.swing.JPanel SellsInvoices;
    private javax.swing.JLabel SellsInvoicesBtn;
    private javax.swing.JTextField Sells_id;
    private javax.swing.JTextField TotalPriceOfInvoice;
    private javax.swing.JTextField TotalPriceOfInvoice2;
    private javax.swing.JLabel TotalPuarchaceBill;
    private javax.swing.JButton UpdateUser;
    private javax.swing.JButton Update_medicine;
    private javax.swing.JTextField UserPhone;
    private javax.swing.JTextField UserSallary;
    private javax.swing.JPanel ViewUsers;
    private javax.swing.JLabel ViewUsersBtn;
    private javax.swing.JPanel Welcome;
    private javax.swing.JLabel Welcome_user;
    private javax.swing.JButton addMedicineBtn;
    private javax.swing.JPanel buyMedicine;
    private javax.swing.JTextField email;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList3;
    private javax.swing.JList<String> jList4;
    private javax.swing.JList<String> jList5;
    private javax.swing.JList<String> jList6;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField medicineName;
    private javax.swing.JTextField medicineNameBuy;
    private javax.swing.JTextField medicineSellPrice;
    private javax.swing.JTextField medicine_id;
    private javax.swing.JTextField medicine_id_Buy;
    private javax.swing.JPanel medicine_store;
    private javax.swing.JTextField name;
    private javax.swing.JTextField nameOfUser;
    private javax.swing.JPasswordField password;
    private javax.swing.JTextField phone;
    private javax.swing.JPanel profile;
    private javax.swing.JPanel purchaseInvoices;
    private javax.swing.JComboBox<String> role_user;
    private javax.swing.JComboBox<String> role_user_lable;
    private javax.swing.JTextField sallary;
    private javax.swing.JButton save_medicine;
    private javax.swing.JButton save_user;
    private javax.swing.JButton savebtn;
    private javax.swing.JPanel sidebar;
    private javax.swing.JTextField totalBuy;
    private javax.swing.JButton updatebtn;
    private javax.swing.JTextField userEmail;
    private javax.swing.JPasswordField userPassword;
    private javax.swing.JTextField user_id;
    private javax.swing.JTextField user_nameOfUsers;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables
}
